{"version":3,"file":"static/js/760.9e875422.chunk.js","mappings":"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","sources":["App/NotFound/index.tsx","App/Prodotto/Widget.tsx","App/Prodotto/Prezzo.tsx","App/Prodotto/Dettagli/Immagini.tsx","App/Prodotto/Dettagli/Varianti.tsx","App/Prodotto/Dettagli/index.tsx","App/Prodotto/index.tsx","features/prodotti/list.ts"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport { Container, Box } from \"@mui/system\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Page } from \"Components\";\r\n\r\nconst NotFound: React.FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page>\r\n      <Container>\r\n        <Box sx={{ textAlign: \"center\" }}>\r\n          <img\r\n            alt=\"pagina non trovata\"\r\n            src={process.env.PUBLIC_URL + \"/static/animations/not-found.gif\"}\r\n            style={{ maxWidth: \"100%\" }}\r\n            width={450}\r\n            height=\"auto\"\r\n          />\r\n          <Typography variant=\"h6\">Qui non c'è niente!</Typography>\r\n          <Typography gutterBottom>\r\n            La pagina che stavi cercando non esiste!\r\n          </Typography>\r\n          <Button variant=\"contained\" onClick={() => navigate(-1)}>\r\n            Torna indietro\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport {\r\n  ButtonBase,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  CardMedia,\r\n} from \"@mui/material\";\r\nimport { find } from \"lodash\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Prodotto } from \"models\";\r\n\r\ninterface Props {\r\n  prodotto: Prodotto;\r\n}\r\n\r\nconst ProdottoWidget: React.FC<Props> = ({ prodotto }) => {\r\n  const navigate = useNavigate();\r\n\r\n  let thumbnail = null;\r\n  if (prodotto.immagini) {\r\n    if (prodotto.immagini.length > 0) {\r\n      thumbnail = find(prodotto.immagini, (i) => i.thumbnail === true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card sx={{ display: \"flex\", backgroundColor: \"#FFFFFF\" }}>\r\n      <ButtonBase\r\n        sx={{ width: \"100% !important\" }}\r\n        onClick={\r\n          prodotto.url\r\n            ? () => navigate(\"/prodotto/\" + prodotto.url)\r\n            : () => navigate(\"#\")\r\n        }\r\n      >\r\n        <Box sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <CardContent\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Typography>\r\n              <b>{prodotto.nome}</b>\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {prodotto.prezzo\r\n                ? prodotto.prezzo + \" €\"\r\n                : \"prezzo non specificato\"}\r\n            </Typography>\r\n            <Typography variant=\"caption\">\r\n              {prodotto.descrizione_breve}\r\n            </Typography>\r\n          </CardContent>\r\n\r\n          {thumbnail && (\r\n            <CardMedia\r\n              sx={{ width: 150 }}\r\n              component=\"img\"\r\n              image={thumbnail.file}\r\n            />\r\n          )}\r\n        </Box>\r\n      </ButtonBase>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProdottoWidget;\r\n","import React from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { Prodotto } from \"models\";\r\n\r\ninterface Props {\r\n  prodotto: Prodotto;\r\n}\r\n\r\nconst Prezzo: React.FC<Props> = ({ prodotto }) => {\r\n  if (prodotto.prezzo) {\r\n    let price = parseFloat(prodotto.prezzo).toFixed(2);\r\n\r\n    return (\r\n      <Typography variant=\"h6\" component=\"p\">\r\n        Prezzo{prodotto.prezzo_a_partire && \" a partire da\"}{\" \"}\r\n        {prodotto.prezzo_offerta ? (\r\n          <span>\r\n            <s>{price}</s> {prodotto.prezzo_offerta}\r\n          </span>\r\n        ) : (\r\n          prodotto.prezzo\r\n        )}{\" \"}\r\n        €\r\n      </Typography>\r\n    );\r\n  } else {\r\n    return <Typography>Prezzo non specificato</Typography>;\r\n  }\r\n};\r\n\r\nexport default Prezzo;\r\n","import { Box, Container } from \"@mui/material\";\r\nimport { filter } from \"lodash\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  immagini: {\r\n    thumbnail: boolean;\r\n    file: string;\r\n  }[];\r\n}\r\n\r\nconst Immagini: React.FC<Props> = ({ immagini }) => {\r\n  let imgs = filter(immagini, (i) => i.thumbnail === false);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          maxWidth: \"100%\",\r\n          overflowX: \"auto\",\r\n          overflowY: \"hidden\",\r\n          maxHeight: 280,\r\n          textAlign: \"center\",\r\n          mb: 3,\r\n          mt: 3,\r\n        }}\r\n      >\r\n        {imgs.map((imm, i) => {\r\n          return (\r\n            <img\r\n              key={i}\r\n              alt=\"Immagine\"\r\n              src={imm.file}\r\n              style={{ maxHeight: 300 }}\r\n            />\r\n          );\r\n        })}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Immagini;\r\n","import { Box, Grid, Typography } from \"@mui/material\";\r\nimport { Prodotto } from \"models\";\r\nimport React from \"react\";\r\nimport ProdottoWidget from \"../Widget\";\r\n\r\ninterface Props {\r\n  varianti: Prodotto[];\r\n}\r\n\r\nconst Varianti: React.FC<Props> = ({ varianti }) => {\r\n  return (\r\n    <Box sx={{ textAlign: \"center\" }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Varianti\r\n      </Typography>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n      >\r\n        {varianti.map((v, i) => {\r\n          return (\r\n            <Grid key={i} item xs={12} sm={6} lg={4}>\r\n              <ProdottoWidget prodotto={v} />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Varianti;\r\n","import { Typography, Container } from \"@mui/material\";\r\nimport { Header, Page } from \"Components\";\r\nimport { Prodotto } from \"models\";\r\nimport React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport Prezzo from \"../Prezzo\";\r\nimport Immagini from \"./Immagini\";\r\nimport Varianti from \"./Varianti\";\r\n\r\ninterface Props {\r\n  prodotto: Prodotto;\r\n}\r\n\r\nconst Dettagli: React.FC<Props> = ({ prodotto }) => {\r\n  const ProdottoImmagini: React.FC = () => {\r\n    if (prodotto.immagini) {\r\n      if (prodotto.immagini.length > 0) {\r\n        return <Immagini immagini={prodotto.immagini} />;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const ProdottoVarianti: React.FC = () => {\r\n    if (prodotto.varianti) {\r\n      if (prodotto.varianti.length > 0) {\r\n        return <Varianti varianti={prodotto.varianti} />;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const ProdottoDescrizione: React.FC = () => {\r\n    if (prodotto.descrizione) {\r\n      return (\r\n        <Container>\r\n          <ReactMarkdown>{prodotto.descrizione}</ReactMarkdown>\r\n        </Container>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Header>\r\n        <Typography variant=\"h3\" gutterBottom>\r\n          {prodotto.nome}\r\n        </Typography>\r\n        <Typography gutterBottom>{prodotto.descrizione_breve}</Typography>\r\n        <Prezzo prodotto={prodotto} />\r\n      </Header>\r\n\r\n      <ProdottoImmagini />\r\n\r\n      <ProdottoVarianti />\r\n\r\n      <ProdottoDescrizione />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dettagli;\r\n","import React from \"react\";\r\nimport NotFound from \"App/NotFound\";\r\nimport { ErrorScreen, LoadingScreen } from \"Components\";\r\nimport { useAppDispatch, useAppSelector } from \"hooks\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Dettagli from \"./Dettagli\";\r\nimport list from \"features/prodotti/list\";\r\n\r\nexport default function Prodotto() {\r\n  const dispatch = useAppDispatch();\r\n  const { prodotto } = useParams();\r\n\r\n  const prodotti = useAppSelector((state) => state.prodotti);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(list({ sito: true, url: prodotto }));\r\n  }, [dispatch, prodotto]);\r\n\r\n  if (prodotti.listing) {\r\n    return <LoadingScreen />;\r\n  } else {\r\n    if (prodotti.listError) {\r\n      return (\r\n        <ErrorScreen>\r\n          Impossibile recuperare il prodotto! Riprova più tardi\r\n        </ErrorScreen>\r\n      );\r\n    } else {\r\n      switch (prodotti.list.length) {\r\n        case 0:\r\n          return <NotFound />;\r\n\r\n        case 1:\r\n          return <Dettagli prodotto={prodotti.list[0]} />;\r\n\r\n        default: // TODO\r\n          return <React.Fragment>Multiple Products</React.Fragment>;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import api, { Endpoints } from \"api\";\r\nimport { AppThunk } from \"store\";\r\nimport { listFail, listSuccess } from \"./slice\";\r\n\r\nexport default function list(q: {} = {}): AppThunk {\r\n  return async (dispatch) => {\r\n    let endpoint = `${Endpoints.PRODOTTI}?`;\r\n    let newQuery: string[] = [];\r\n\r\n    for (const [key, value] of Object.entries(q)) {\r\n      newQuery.push(`${key}=${value}`);\r\n    }\r\n\r\n    const queryAsString = newQuery.join(\"&\");\r\n\r\n    api\r\n      .get(`${endpoint}${queryAsString}`)\r\n      .then((response) => {\r\n        dispatch(listSuccess(response.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(listFail());\r\n      });\r\n  };\r\n}\r\n"],"names":["navigate","useNavigate","sx","textAlign","alt","src","process","style","maxWidth","width","height","variant","gutterBottom","onClick","prodotto","thumbnail","immagini","length","find","i","display","backgroundColor","url","flexDirection","justifyContent","nome","prezzo","descrizione_breve","component","image","file","price","parseFloat","toFixed","Typography","prezzo_a_partire","prezzo_offerta","imgs","filter","Container","Box","overflowX","overflowY","maxHeight","mb","mt","map","imm","varianti","Grid","container","direction","alignItems","spacing","v","item","xs","sm","lg","ProdottoImmagini","ProdottoVarianti","ProdottoDescrizione","descrizione","Prodotto","dispatch","useAppDispatch","useParams","prodotti","useAppSelector","state","React","list","sito","listing","listError","NotFound","q","endpoint","Endpoints","newQuery","Object","entries","key","value","push","queryAsString","join","api","then","response","listSuccess","data","catch","error","listFail"],"sourceRoot":""}