{"version":3,"file":"static/js/155.f3dbca81.chunk.js","mappings":"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","sources":["App/Contatti/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { filter, isEmpty, forEach } from \"lodash\";\nimport {\n  Container,\n  Typography,\n  Paper,\n  Link,\n  Box,\n  TextField,\n  Button,\n  Alert,\n  FormControlLabel,\n  Checkbox,\n} from \"@mui/material\";\nimport { IconSend } from \"@tabler/icons\";\nimport api from \"api\";\n\nconst Contatti: React.FC = () => {\n  const [formError, setFormError] = React.useState(true);\n  const [response, setRespose] = React.useState({\n    status: \"\",\n    statusText: \"\",\n  });\n  const [values, setValues] = React.useState({\n    email: {\n      value: \"\",\n      error: true,\n    },\n    messaggio: {\n      value: \"\",\n      error: true,\n    },\n    privacy: {\n      value: false,\n      error: true,\n    },\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: {\n        value: value,\n        error: value === \"\" || value === null ? true : false,\n      },\n    });\n  };\n\n  React.useEffect(() => {\n    const errorFormObj = filter(values, [\"error\", true]);\n\n    setFormError(!isEmpty(errorFormObj));\n  }, [values]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const obj: { [key: string]: string | boolean } = {};\n\n    forEach(values, (o, k): void => {\n      obj[k] = o.value;\n    });\n\n    api\n      .post(\"/contatti/\", obj)\n      .then((response) => {\n        setRespose({\n          status: response.status.toString(),\n          statusText: response.statusText,\n        });\n      })\n      .catch((error) => {\n        if (error.response) {\n          setRespose({\n            status: error.response.status,\n            statusText: \"Impossibile inviare l'email\",\n          });\n        } else if (error.request) {\n          console.log(\"request\");\n          console.log(error.request);\n        } else {\n          console.log(\"else\");\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n\n  const handlePrivacyChange = function (e: any) {\n    setValues({\n      ...values,\n      privacy: {\n        ...values.privacy,\n        value: !values.privacy.value,\n        error: !values.privacy.value === false ? true : false,\n      },\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Box\n        sx={{\n          backgroundImage: `url(${\n            process.env.PUBLIC_URL + \"/static/wallpapers/mood.jpg\"\n          })`,\n          backgroundPosition: \"center center\",\n        }}\n      >\n        <Box\n          sx={{\n            pt: 6,\n            pb: 6,\n          }}\n        >\n          <Container maxWidth=\"sm\">\n            <Paper sx={{ p: 2, textAlign: \"center\", mb: 6 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Chiamaci\n              </Typography>\n              <Link href=\"tel:+390302122560\">030 21 22 560</Link>\n              <Typography variant=\"body2\">oppure</Typography>\n              <Link href=\"tel:+393277331510\">Whatsapp: 327 733 1510</Link>\n            </Paper>\n          </Container>\n\n          <Container maxWidth=\"sm\">\n            <Paper sx={{ p: 2, textAlign: \"center\" }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Scrivici\n              </Typography>\n              <form onSubmit={handleSubmit}>\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  variant=\"outlined\"\n                  fullWidth\n                  helperText=\"scrivi la tua email\"\n                  margin=\"normal\"\n                  value={values.email.value}\n                  error={values.email.error}\n                  onChange={handleChange}\n                  required\n                  inputProps={{\n                    inputMode: \"email\",\n                    type: \"email\",\n                  }}\n                />\n\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"messaggio\"\n                  name=\"messaggio\"\n                  variant=\"outlined\"\n                  helperText=\"scrivi il tuo messaggio\"\n                  value={values.messaggio.value}\n                  error={values.messaggio.error}\n                  onChange={handleChange}\n                  fullWidth\n                  multiline\n                  required\n                  margin=\"normal\"\n                />\n\n                <Box sx={{ mb: 3 }}>\n                  <Typography variant=\"overline\">Privacy</Typography>\n                  <Typography variant=\"body2\" gutterBottom>\n                    Accetto di condividere con La Rapida di Davide Di Criscito\n                    il mio indirizzo email e comprendo che l'email non verr√†\n                    utilizzata per altri scopi che non siano quello di essere\n                    ricontattato.\n                  </Typography>\n\n                  <FormControlLabel\n                    label=\"Ho compreso\"\n                    onChange={handlePrivacyChange}\n                    control={\n                      <Checkbox\n                        checked={values.privacy.value}\n                        value={values.privacy.value}\n                        required\n                      />\n                    }\n                  />\n                </Box>\n\n                <Button\n                  variant=\"contained\"\n                  endIcon={<IconSend />}\n                  disabled={formError}\n                  onClick={handleSubmit}\n                >\n                  Invia\n                </Button>\n              </form>\n\n              {response.status && (\n                <Alert\n                  sx={{ mt: 3 }}\n                  severity={+response.status === 200 ? \"success\" : \"error\"}\n                >\n                  {response.statusText}\n                </Alert>\n              )}\n            </Paper>\n          </Container>\n        </Box>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default Contatti;\n"],"names":["React","formError","setFormError","status","statusText","response","setRespose","email","value","error","messaggio","privacy","values","setValues","handleChange","e","target","name","errorFormObj","filter","isEmpty","handleSubmit","preventDefault","obj","forEach","o","k","api","then","toString","catch","request","console","log","message","sx","backgroundImage","process","backgroundPosition","pt","pb","maxWidth","p","textAlign","mb","variant","gutterBottom","href","onSubmit","id","label","type","fullWidth","helperText","margin","onChange","required","inputProps","inputMode","multiline","control","checked","endIcon","disabled","onClick","mt","severity"],"sourceRoot":""}